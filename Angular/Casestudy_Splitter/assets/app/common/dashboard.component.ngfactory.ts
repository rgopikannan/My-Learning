/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './dashboard.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '../auth/auth.service';
import * as import9 from '@angular/router/src/router';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from './left-nav.component';
import * as import13 from './center.component';
import * as import14 from './left-nav.component.ngfactory';
import * as import15 from './center.component.ngfactory';
import * as import16 from '../bill/bill.service';
import * as import17 from '../friend/friend.service';
var renderType_DashboardComponent_Host:import0.RenderComponentType = (null as any);
class _View_DashboardComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _DashboardComponent_0_4:import3.DashboardComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DashboardComponent_Host0,renderType_DashboardComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('app-dashboard',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_DashboardComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._DashboardComponent_0_4 = new import3.DashboardComponent(this.parentInjector.get(import8.AuthService),this.parentInjector.get(import9.Router));
    this._appEl_0.initComponent(this._DashboardComponent_0_4,[],compView_0);
    compView_0.create(this._DashboardComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.DashboardComponent) && (0 === requestNodeIndex))) { return this._DashboardComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._DashboardComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_DashboardComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_DashboardComponent_Host === (null as any))) { (renderType_DashboardComponent_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,[],{})); }
  return new _View_DashboardComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const DashboardComponentNgFactory:import11.ComponentFactory<import3.DashboardComponent> = new import11.ComponentFactory<import3.DashboardComponent>('app-dashboard',viewFactory_DashboardComponent_Host0,import3.DashboardComponent);
const styles_DashboardComponent:any[] = [];
var renderType_DashboardComponent:import0.RenderComponentType = (null as any);
class _View_DashboardComponent0 extends import1.AppView<import3.DashboardComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  /*private*/ _appEl_4:import2.AppElement;
  _LeftNavComponent_4_4:import12.LeftNavComponent;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  /*private*/ _appEl_9:import2.AppElement;
  _CenterComponent_9_4:import13.CenterComponent;
  _text_10:any;
  _text_11:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_DashboardComponent0,renderType_DashboardComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','col-md-10 col-md-offset-1 padding-05');
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','col-md-3 padding-05');
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'app-left-nav',(null as any));
    this._appEl_4 = new import2.AppElement(4,2,this,this._el_4);
    var compView_4:any = import14.viewFactory_LeftNavComponent0(this.viewUtils,this.injector(4),this._appEl_4);
    this._LeftNavComponent_4_4 = new import12.LeftNavComponent(this.parentInjector.get(import8.AuthService));
    this._appEl_4.initComponent(this._LeftNavComponent_4_4,[],compView_4);
    compView_4.create(this._LeftNavComponent_4_4,[],(null as any));
    this._text_5 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_7 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_7,'class','col-md-6 padding-05');
    this.renderer.setElementAttribute(this._el_7,'id','center_comp');
    this._text_8 = this.renderer.createText(this._el_7,'\n        ',(null as any));
    this._el_9 = this.renderer.createElement(this._el_7,'app-center-component',(null as any));
    this._appEl_9 = new import2.AppElement(9,7,this,this._el_9);
    var compView_9:any = import15.viewFactory_CenterComponent0(this.viewUtils,this.injector(9),this._appEl_9);
    this._CenterComponent_9_4 = new import13.CenterComponent(this.parentInjector.get(import8.AuthService),this.parentInjector.get(import16.BillService),this.parentInjector.get(import17.FriendService));
    this._appEl_9.initComponent(this._CenterComponent_9_4,[],compView_9);
    compView_9.create(this._CenterComponent_9_4,[],(null as any));
    this._text_10 = this.renderer.createText(this._el_7,'\n    ',(null as any));
    this._text_11 = this.renderer.createText(this._el_0,'\n',(null as any));
    this.init([],[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._text_11
    ]
    ,[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.LeftNavComponent) && (4 === requestNodeIndex))) { return this._LeftNavComponent_4_4; }
    if (((token === import13.CenterComponent) && (9 === requestNodeIndex))) { return this._CenterComponent_9_4; }
    return notFoundResult;
  }
}
export function viewFactory_DashboardComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.DashboardComponent> {
  if ((renderType_DashboardComponent === (null as any))) { (renderType_DashboardComponent = viewUtils.createRenderComponentType('E:/ACADGILD/case study/splitter-angular2/assets/app/common/dashboard.component.html',0,import10.ViewEncapsulation.None,styles_DashboardComponent,{})); }
  return new _View_DashboardComponent0(viewUtils,parentInjector,declarationEl);
}